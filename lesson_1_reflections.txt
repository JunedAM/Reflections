How did viewing a diff between two versions of a file help you see the bug that was introduced?
The diff command automatically pointed to the lines that were changed. This helps in looking at the only lines that changed and identifying the difference instead of reading through large files. Also the difference which are not very evident in plain sight like "!" vs "1" are visible when you use diff.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Having entire history of a file will help me jump back any version in the file history with out having to tediously manage each version of file manually.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Only logically relevant commits are saved.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
In a programming project setup the files are inter-dependent. Change in one file might other files and therefore it is required to commit all the files in project at each checkpoint.

How can you use the commands git log and git diff to view the history of files?
Git log helps in seeing the entire history of commits for the repository and git diff helps in comparing two different commits

How might using version control make you more confident to make changes that could break something?
I can always rollback my code to the last working version

Now that you have your workspace set up, what do you want to try using Git for?
Create Repositories for my project. Write code and commit at every logical addition.
